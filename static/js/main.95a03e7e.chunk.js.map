{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","CustomTodo","todoTitle","currToDos","createToDoId","toDos","idS","Math","max","this","App","useState","inputTitle","setInputTitle","inputUser","setInputUser","toDosForRender","setToDosForRender","isTitleError","setTitleError","isUserError","setUserError","handleChange","e","target","value","action","method","onSubmit","preventDefault","curr","handleSubmit","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95a03e7e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nclass CustomTodo implements Todo {\n  id: number;\n\n  userId: number;\n\n  title: string;\n\n  completed: boolean;\n\n  user: User | null;\n\n  constructor(\n    userId: number,\n    todoTitle: string,\n    currToDos: Todo[],\n    completed = false,\n  ) {\n    this.userId = +userId;\n    this.title = todoTitle;\n    this.completed = completed;\n    this.user = getUser(userId);\n    this.id = this.createToDoId(currToDos);\n  }\n\n  createToDoId = (toDos: Todo[]) => {\n    const idS = toDos.map(todo => todo.id);\n\n    return Math.max(...idS) + 1;\n  };\n}\n\nexport const App = () => {\n  const [inputTitle, setInputTitle] = useState('');\n  const [inputUser, setInputUser] = useState(0);\n  const [toDosForRender, setToDosForRender] = useState(todos);\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputTitle || !inputUser) {\n      setTitleError(!inputTitle);\n      setUserError(!inputUser);\n\n      return;\n    }\n\n    setToDosForRender(\n      (curr) => [...curr, new CustomTodo(inputUser, inputTitle, curr)],\n    );\n    setInputTitle('');\n    setInputUser(0);\n    setTitleError(!inputTitle);\n    setUserError(!inputUser);\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (e.target.name === 'title') {\n      setInputTitle(e.target.value);\n      setTitleError(false);\n    } else {\n      setInputUser(+e.target.value);\n      setUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/\"\n        method=\"get\"\n        onSubmit={(e) => handleSubmit(e)}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              name=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Title\"\n              value={inputTitle}\n              onChange={(e) => handleChange(e)}\n            />\n          </label>\n\n          {isTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              id=\"user\"\n              name=\"user\"\n              value={inputUser}\n              onChange={(e) => handleChange(e)}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(({ name, id }) => (\n                <option key={name} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isUserError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={toDosForRender} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}